"use strict";(self.webpackChunkiplazalabs=self.webpackChunkiplazalabs||[]).push([[821],{4821:(t,e,s)=>{s.d(e,{EthereumProvider:()=>y});var i=s(68041),n=s(95935),a=s(15878);const o="".concat("wc","@2:").concat("ethereum_provider",":"),c=["eth_sendTransaction","personal_sign"],r=["eth_accounts","eth_requestAccounts","eth_sendRawTransaction","eth_sign","eth_signTransaction","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","eth_sendTransaction","personal_sign","wallet_switchEthereumChain","wallet_addEthereumChain","wallet_getPermissions","wallet_requestPermissions","wallet_registerOnboarding","wallet_watchAsset","wallet_scanQRCode"],h=["chainChanged","accountsChanged"],l=["chainChanged","accountsChanged","message","disconnect","connect"];var d=Object.defineProperty,p=Object.defineProperties,u=Object.getOwnPropertyDescriptors,g=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,v=Object.prototype.propertyIsEnumerable,C=(t,e,s)=>e in t?d(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s,I=(t,e)=>{for(var s in e||(e={}))m.call(e,s)&&C(t,s,e[s]);if(g)for(var s of g(e))v.call(e,s)&&C(t,s,e[s]);return t},w=(t,e)=>p(t,u(e));function f(t){return Number(t[0].split(":")[1])}function _(t){return"0x".concat(t.toString(16))}class E{constructor(){this.events=new i.EventEmitter,this.namespace="eip155",this.accounts=[],this.chainId=1,this.STORAGE_KEY=o,this.on=(t,e)=>(this.events.on(t,e),this),this.once=(t,e)=>(this.events.once(t,e),this),this.removeListener=(t,e)=>(this.events.removeListener(t,e),this),this.off=(t,e)=>(this.events.off(t,e),this),this.parseAccount=t=>this.isCompatibleChainId(t)?this.parseAccountId(t).address:t,this.signer={},this.rpc={}}static async init(t){const e=new E;return await e.initialize(t),e}async request(t){return await this.signer.request(t,this.formatChainId(this.chainId))}sendAsync(t,e){this.signer.sendAsync(t,e,this.formatChainId(this.chainId))}get connected(){return!!this.signer.client&&this.signer.client.core.relayer.connected}get connecting(){return!!this.signer.client&&this.signer.client.core.relayer.connecting}async enable(){return this.session||await this.connect(),await this.request({method:"eth_requestAccounts"})}async connect(t){if(!this.signer.client)throw new Error("Provider not initialized. Call init() first");this.loadConnectOpts(t);const{required:e,optional:s}=function(t){const{chains:e,optionalChains:s,methods:i,optionalMethods:a,events:o,optionalEvents:d,rpcMap:p}=t;if(!(0,n.qt)(e))throw new Error("Invalid chains");const u={chains:e,methods:i||c,events:o||h,rpcMap:I({},e.length?{[f(e)]:p[f(e)]}:{})},g=null===o||void 0===o?void 0:o.filter((t=>!h.includes(t))),m=null===i||void 0===i?void 0:i.filter((t=>!c.includes(t)));if(!s&&!d&&!a&&(null==g||!g.length)&&(null==m||!m.length))return{required:e.length?u:void 0};const v=(null===g||void 0===g?void 0:g.length)&&(null===m||void 0===m?void 0:m.length)||!s,C={chains:[...new Set(v?u.chains.concat(s||[]):s)],methods:[...new Set(u.methods.concat(null!=a&&a.length?a:r))],events:[...new Set(u.events.concat(null!=d&&d.length?d:l))],rpcMap:p};return{required:e.length?u:void 0,optional:s.length?C:void 0}}(this.rpc);try{const i=await new Promise((async(i,n)=>{var a;this.rpc.showQrModal&&(null==(a=this.modal)||a.subscribeModal((t=>{!t.open&&!this.signer.session&&(this.signer.abortPairingAttempt(),n(new Error("Connection request reset. Please try again.")))}))),await this.signer.connect(w(I({namespaces:I({},e&&{[this.namespace]:e})},s&&{optionalNamespaces:{[this.namespace]:s}}),{pairingTopic:null===t||void 0===t?void 0:t.pairingTopic})).then((t=>{i(t)})).catch((t=>{n(new Error(t.message))}))}));if(!i)return;const a=(0,n.gu)(i.namespaces,[this.namespace]);this.setChainIds(this.rpc.chains.length?this.rpc.chains:a),this.setAccounts(a),this.events.emit("connect",{chainId:_(this.chainId)})}catch(i){throw this.signer.logger.error(i),i}finally{this.modal&&this.modal.closeModal()}}async disconnect(){this.session&&await this.signer.disconnect(),this.reset()}get isWalletConnect(){return!0}get session(){return this.signer.session}registerEventListeners(){this.signer.on("session_event",(t=>{const{params:e}=t,{event:s}=e;"accountsChanged"===s.name?(this.accounts=this.parseAccounts(s.data),this.events.emit("accountsChanged",this.accounts)):"chainChanged"===s.name?this.setChainId(this.formatChainId(s.data)):this.events.emit(s.name,s.data),this.events.emit("session_event",t)})),this.signer.on("chainChanged",(t=>{const e=parseInt(t);this.chainId=e,this.events.emit("chainChanged",_(this.chainId)),this.persist()})),this.signer.on("session_update",(t=>{this.events.emit("session_update",t)})),this.signer.on("session_delete",(t=>{this.reset(),this.events.emit("session_delete",t),this.events.emit("disconnect",w(I({},(0,n.D6)("USER_DISCONNECTED")),{data:t.topic,name:"USER_DISCONNECTED"}))})),this.signer.on("display_uri",(t=>{var e,s;this.rpc.showQrModal&&(null==(e=this.modal)||e.closeModal(),null==(s=this.modal)||s.openModal({uri:t})),this.events.emit("display_uri",t)}))}switchEthereumChain(t){this.request({method:"wallet_switchEthereumChain",params:[{chainId:t.toString(16)}]})}isCompatibleChainId(t){return"string"==typeof t&&t.startsWith("".concat(this.namespace,":"))}formatChainId(t){return"".concat(this.namespace,":").concat(t)}parseChainId(t){return Number(t.split(":")[1])}setChainIds(t){const e=t.filter((t=>this.isCompatibleChainId(t))).map((t=>this.parseChainId(t)));e.length&&(this.chainId=e[0],this.events.emit("chainChanged",_(this.chainId)),this.persist())}setChainId(t){if(this.isCompatibleChainId(t)){const e=this.parseChainId(t);this.chainId=e,this.switchEthereumChain(e)}}parseAccountId(t){const[e,s,i]=t.split(":");return{chainId:"".concat(e,":").concat(s),address:i}}setAccounts(t){this.accounts=t.filter((t=>this.parseChainId(this.parseAccountId(t).chainId)===this.chainId)).map((t=>this.parseAccountId(t).address)),this.events.emit("accountsChanged",this.accounts)}getRpcConfig(t){var e,s;const i=null!=(e=null===t||void 0===t?void 0:t.chains)?e:[],n=null!=(s=null===t||void 0===t?void 0:t.optionalChains)?s:[],a=i.concat(n);if(!a.length)throw new Error("No chains specified in either `chains` or `optionalChains`");const o=i.length?(null===t||void 0===t?void 0:t.methods)||c:[],r=i.length?(null===t||void 0===t?void 0:t.events)||h:[],l=(null===t||void 0===t?void 0:t.optionalMethods)||[],d=(null===t||void 0===t?void 0:t.optionalEvents)||[],p=(null===t||void 0===t?void 0:t.rpcMap)||this.buildRpcMap(a,t.projectId),u=(null===t||void 0===t?void 0:t.qrModalOptions)||void 0;return{chains:null===i||void 0===i?void 0:i.map((t=>this.formatChainId(t))),optionalChains:n.map((t=>this.formatChainId(t))),methods:o,events:r,optionalMethods:l,optionalEvents:d,rpcMap:p,showQrModal:!(null==t||!t.showQrModal),qrModalOptions:u,projectId:t.projectId,metadata:t.metadata}}buildRpcMap(t,e){const s={};return t.forEach((t=>{s[t]=this.getRpcUrl(t,e)})),s}async initialize(t){if(this.rpc=this.getRpcConfig(t),this.chainId=this.rpc.chains.length?f(this.rpc.chains):f(this.rpc.optionalChains),this.signer=await a.k.init({projectId:this.rpc.projectId,metadata:this.rpc.metadata,disableProviderPing:t.disableProviderPing,relayUrl:t.relayUrl,storageOptions:t.storageOptions}),this.registerEventListeners(),await this.loadPersistedSession(),this.rpc.showQrModal){let t;try{const{WalletConnectModal:e}=await s.e(199).then(s.bind(s,41199));t=e}catch{throw new Error("To use QR modal, please install @walletconnect/modal package")}if(t)try{this.modal=new t(I({projectId:this.rpc.projectId},this.rpc.qrModalOptions))}catch(e){throw this.signer.logger.error(e),new Error("Could not generate WalletConnectModal Instance")}}}loadConnectOpts(t){if(!t)return;const{chains:e,optionalChains:s,rpcMap:i}=t;e&&(0,n.qt)(e)&&(this.rpc.chains=e.map((t=>this.formatChainId(t))),e.forEach((t=>{this.rpc.rpcMap[t]=(null===i||void 0===i?void 0:i[t])||this.getRpcUrl(t)}))),s&&(0,n.qt)(s)&&(this.rpc.optionalChains=[],this.rpc.optionalChains=null===s||void 0===s?void 0:s.map((t=>this.formatChainId(t))),s.forEach((t=>{this.rpc.rpcMap[t]=(null===i||void 0===i?void 0:i[t])||this.getRpcUrl(t)})))}getRpcUrl(t,e){var s;return(null==(s=this.rpc.rpcMap)?void 0:s[t])||"".concat("https://rpc.walletconnect.com/v1/","?chainId=eip155:").concat(t,"&projectId=").concat(e||this.rpc.projectId)}async loadPersistedSession(){if(!this.session)return;const t=await this.signer.client.core.storage.getItem("".concat(this.STORAGE_KEY,"/chainId")),e=this.session.namespaces["".concat(this.namespace,":").concat(t)]?this.session.namespaces["".concat(this.namespace,":").concat(t)]:this.session.namespaces[this.namespace];this.setChainIds(t?[this.formatChainId(t)]:null===e||void 0===e?void 0:e.accounts),this.setAccounts(null===e||void 0===e?void 0:e.accounts)}reset(){this.chainId=1,this.accounts=[]}persist(){this.session&&this.signer.client.core.storage.setItem("".concat(this.STORAGE_KEY,"/chainId"),this.chainId)}parseAccounts(t){return"string"==typeof t||t instanceof String?[this.parseAccount(t)]:t.map((t=>this.parseAccount(t)))}}const y=E}}]);